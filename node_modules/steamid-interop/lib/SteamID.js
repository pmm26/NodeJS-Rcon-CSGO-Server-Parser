// Generated by CoffeeScript 1.9.2
(function() {
  var Long, SteamID;

  Long = require('long');

  SteamID = (function() {
    function SteamID(object) {
      this.accountID = object.accountID || 0;
      this.accountInstance = object.accountInstance || 1;
      this.accountType = object.accountType || 1;
      this.accountUniverse = object.accountUniverse || 0;
    }

    SteamID.decode = function(steamID) {
      if (steamID.indexOf('STEAM') > -1) {
        return this.decode32(steamID);
      } else if (steamID.indexOf('[') > -1) {
        return this.decodeSteam3(steamID);
      } else {
        return this.decode64(steamID);
      }
    };

    SteamID.decode64 = function(steamID) {
      steamID = Long.fromValue(steamID);
      return new SteamID({
        accountID: steamID.low,
        accountInstance: steamID.high & 0xFFFFF,
        accountType: steamID.high >> 20 & 0xF,
        accountUniverse: steamID.high >> 24 & 0xFF
      });
    };

    SteamID.decode32 = function(steamID) {
      var accountID, accountUniverse, missingBit;
      steamID = steamID.split(':');
      accountUniverse = parseInt(steamID[0][steamID[0].length - 1]);
      if (accountUniverse == 0)
        accountUniverse = 1
      missingBit = steamID[1];
      accountID = parseInt(steamID[2]) << 1 | missingBit;
      return new SteamID({
        accountUniverse: accountUniverse,
        accountID: accountID
      });
    };

    SteamID.decodeSteam3 = function(steamID) {
      var accountID, accountUniverse;
      steamID = steamID.replace(/[\[\]]/g, '');
      steamID = steamID.split(':');
      accountUniverse = parseInt(steamID[1]);
      accountID = parseInt(steamID[2]);
      return new SteamID({
        accountUniverse: accountUniverse,
        accountID: accountID
      });
    };

    SteamID.prototype.encode64 = function() {
      return new Long(this.accountID, this.accountInstance | this.accountType << 20 | this.accountUniverse << 24).toString();
    };

    SteamID.prototype.encode32 = function() {
      return "STEAM_" + (this.accountUniverse - 1) + ":" + (this.accountID & 0x1) + ":" + (this.accountID >> 1);
    };

    SteamID.prototype.encodeSteam3 = function() {
      return "[" + SteamID.AccountTypes[this.accountType] + ":" + this.accountUniverse + ":" + this.accountID + "]";
    };

    SteamID.prototype.toString = function(encoding) {
      if (encoding == null) {
        encoding = '64';
      }
      if (encoding === '64') {
        return this.encode64();
      } else if (encoding === '32') {
        return this.encode32();
      } else if (encoding === 'steam3') {
        return this.encodeSteam3();
      }
    };

    return SteamID;

  })();

  SteamID.AccountTypes = ['I', 'U', 'M', 'G', 'A', 'P', 'C', 'g', 'T', 'c', 'L'];

  module.exports = SteamID;

}).call(this);
